/* css 선택자 */


/* 전체 선택자 = '*' */
/* 전체에 적용되는 css */

/* * {
    color: purple;
} */

/* 태그 선택자 */
/* p {
    color: blue;
} */

h1 {
    font-size: 24px;
    text-align: center;
    color: brown;
}

/* 중첩이 된다면 아래에 있는 css가 우선 */

/* id 선택자 */
#h1_id {
    color: aquamarine;
    font-size: 30px;
}

#p_id {
    text-align: center;
    color: black;
}

/* class 선택자 */
.h1_class {
    color: red;
}

.p_class {
    background-color: gray;
}

.p_class2 {
    text-align: center;
}

.p_class3 {
    color: white;
    font-size: small;
}

.p_class.p_class2.p_class3 {
    font-size: 20px;
    /* color: blueviolet; */
    text-align: right;
}

/* 기본 속성 선택자 */
/* a태그 href a[target="_blank"] */
a[target="_blank"] {
    color: red;
    text-align: center;
    font-size: 30px;
}

/* 조합 선택자 사용 */
p, #title, .red {
    font-size: 25px;
}

/* p, .p_id, #p_id2 {
    font-size: 30;
    background-color: blueviolet;
    color: black;
} */

/* 지정된 속성의 값이 지정된 값을 (공백으로 분리된) 단어로 포함하는 요소를 선택 */
/* 태그[속성~="값"] - 포함하는 게 '~='임*/
h2[title~="first"] {
    color: red;
}

/* 태그[속성 |="값"] */
/* 지정된 속성의 값이 일치하거나 지정된 속성 값 뒤에 하이픈(-)으로 시작하는 요소를 선택 */
h2[title|="heading"] {
    color: green;
}

/* 태그[속성^="값"] */
/* 지정된 속성 값으로 시작하는 요소를 선택 */
a[href^="https"] {
    color: gray;
}

/* 태그[속성$="값"] */
/* 지정된 속성 값으로 끝나는 요소를 선택 */
a[href$=org] {
    color: red;
}

/* 태그[속성*="값"] */
/* 지정된 속성값을 포함하는 요소를 선택 */
div[class*="test"] {
    color: red;
}

div[class~="test"] {
    background-color: yellow;
}

/* 자손 셀렉터 */
/* 부모태그 자손태그 {} */
/* 자손까지 선택할 때는 태그 사이에 공백 */
div.grandpa p {
    color: red;
}

/* 자식 셀렉터 */
/* 부모태그 > 자식태그 {} */
div.parents > p {
    color: white;
}

/* 형제 셀렉터 */
/* 형제 + 형제 */
/* 형제 1 바로 뒤에 오는 형제 2요소를 선택 = 인접 형제 셀렉터 */
.siblings1 p + ul {
    color: red;
}

/* 일반 형제 셀렉터 */
/* 형제1 뒤에 위치하는 형제2요소를 모두 선택 */
.siblings2 p ~ ul {
    background-color: yellow;
}

/* 링크 셀렉터 */
/* :link -> 셀렉터가 방문하지 않은 링크일 때 */
/* :visited -> 셀렉터가 방문한 링크일 때 */
/* :hover -> 셀렉터에 마우스가 올라와 있을 때 */
/* :active -> 셀렉터가 클릭된 상태일 때 */
/* :focus -> 셀렉터에 포커스가 들어와 있을 때 */
a:link {
    color: orange;
}

a:visited {
    color: green;
}

a:hover {
    font-weight: bold;
}

a:active {
    color: blue;
}

input[type="text"]:focus {
    color: red;
}

/* 구조 가상 클래스 셀렉터 */
/* div 자식 중에 p면서 첫번째 자식을 찾음 */
div.structural p:first-child {
    color: red;
}
div.structural p:last-child {
    color: red;
}

/* :nth-child(n) -> 셀렉터에 해당하는 모든 요소 중 앞에서 n번째인 자식 요소를 선택*/
/* 부모의 모든 자식 요소를 고려하기 때문에, 선택하려는 요소가 같은 타입의 요소인지 여부는 고려하지 않습니다. */
/* :nth-last-child(n) -> 셀렉터에 해당하는 모든 요소 중 뒤에서 n번째인 자식 요소를 선택*/
/* n = 0이 기본, 짝수하려면 2n, 홀수는 2n+1 */
div.nth_child ol > li:nth-child(2n) {
    color: orange;
}
div.nth_child ol > li:nth-child(2n+1) {
    color: red;
}
div.nth_child ul > li:nth-child(4) {
    color: green;
}

div.nth_child ul > li:nth-last-child(2n) {
    font-size: 20px;
}

/* :first-of-type -> 셀렉터에 해당하는 요소의 부모 요소의 자식 중에서 첫번째 등장하는 요소 선택*/
/* :last-of-type -> 셀렉터에 해당하는 요소의 부모 요소의 자식 중에서 마지막에 등장하는 요소 선택*/
/* :nth-of-type(n) -> 셀렉터에 해당하는 요소의 부모 요소의 자식 중에서 앞에서 n번째 등장하는 요소 선택*/
/* 부모의 자식 요소들 중에서 같은 타입의 요소들만 고려합니다. */
/* :nth-last-of-type(n) -> 셀렉터에 해당하는 요소의 부모 요소의 자식 중에서 뒤에서 n번째 등장하는 요소 선택*/

div.of_type p:first-of-type {
    color: red;
}
div.of_type p:last-of-type {
    color: blue;
}
div.of_type p:nth-of-type(2) {
    color: green;
}
div.of_type p:nth-last-of-type(2) {
    color: violet;
}

/*
nth-child와 nth-of-type의 차이 :
nth-child는 부모의 모든 자식 요소를 대상으로 하여 순서를 매깁니다.
반면, nth-of-type은 동일한 태그명을 가진 형제 요소들만을 대상으로 순서를 매깁니다.
*/

/* 정합성 검증 셀렉터 */
/* :vaild -> 정합성 검증이 성공한 input or form 요소를 선택 */
/* :invaild -> 정합성 검증이 실패한 input or form 요소를 선택 */

div.validity input[type="text"]:valid {
    background-color: greenyellow;
}
div.validity input[type="text"]:invalid {
    background-color: red;
}

/* 가상 요소 셀렉터 */
/* ::first-letter -> 콘텐츠의 첫 글자를 선택 */
/* ::first-line -> 콘텐츠의 첫 줄을 선택, 블록 요소(p태그, div태그 등)에만 적용 */
/* ::after -> 콘텐츠의 뒷공간을 선택, content와 함께 사용 */
/* ::before -> 콘텐츠의 앞공간을 선택, content와 함께 사용 */
/* ::selection -> 드래그한 콘텐츠를 선택 */

div.pseudo_ele p::first-letter {
    font-size: 3em;
}
div.pseudo_ele p::first-line {
    color: red;
}
div.pseudo_ele h2::before {
    content: "  HTML!!!  ";
    color: blue;
}
div.pseudo_ele h2::after {
    content: "  CSS!!!  ";
    color: red;
}
div.pseudo_ele ::selection {
    color: white;
    background-color: rgb(105, 105, 43);
}